@using Web.Models.Bonuses
@model IEnumerable<BonusDto>
@{
    ViewBag.Title = "Index";
}
<h2>
    Bonuses</h2>

<div>
    <div id="bonusesGrid">
    </div>
    <script type="text/javascript" language="javascript">
        $(document).ready(function () {
        
//            $.ajax({
//              url: "@Url.Action("GetPagedJsonBonuses", "Bonuses")",
//              async: false,
//              dataType: 'json',
//              success: function (json) {
//                  testdata = json;
//              }
//            });
            
                
            //NOTE:
            // this a hack. I didn't find the answer  how to bind employee's
            // id and name from combobox.EmployeeId to selected row's model.EmployeeId
            var newValueEmployeeId;
            var newValueEmployeeLastName;
            
            // Sets the employee's Id and last name which was selected using 
            // autocomplete combobox during edit current bonus or creation of new one.
            function setNewValueEmployeeIdAndLastName(id, lastName) {
                if(id !== undefined && lastName !== undefined) {
                    newValueEmployeeId = id;
                    newValueEmployeeLastName = lastName;
                }
            }
            
            var currentValueEmployeeId;
            var currentValueEmployeeLastName;
            
            function setCurrentValueEmployeeIdAndLastName(id, lastName) {
                if(id !== undefined)
                currentValueEmployeeId = id;
                
                if(lastName !== undefined)
                currentValueEmployeeLastName = lastName;
            }
            
            // datasource for autocomlete combobox to lookup employees names from
           var employeesDataSource = new kendo.data.DataSource({
                type: "json",
                serverFiltering : true,
                transport: {
                    read: "@Url.Action("GetJsonEmployeesByLastName", "Bonuses")", 
                },
                // set's the local document variables with  employee's id and last name
                // selected by an autocomplete control values.
                parameterMap: function (options, operation) {
                        if (operation === "update" || operation === "create") {
                            setNewValueEmployeeIdAndLastName(options.Id, options.LastName);
                        }
                        return options;
                    }
            });
            
            // sets custom editor (autocomplete) for bonuses grid's filed "LastName"
            //$('<input required data-text-field="LastName" data-value-field="EmployeeId" data-bind="value:' + options.field + '"/>')
            function employeeAutocompletingEditor(container, options) {
                    $('<input required data-text-field="LastName" data-value-field="EmployeeId" data-bind="value:' + options.field + '"/>')
                        .appendTo(container)
                        .kendoComboBox({     
                            filter: "contains",
                            // sets the local variables to update values of current row.
                            change: function(e) {
//                                        if(this.text() !== this.value())
//                                            setNewValueEmployeeIdAndLastName(this.value(),this.text());
                                        setNewEmployeeIdAndLastName(this.value(),this.text()); 
                                    },
//                            dataBinding: function (e) {
//                                if(currentValueEmployeeLastName !== undefined)
//                                    this.value(currentValueEmployeeLastName);
//                            },
                            dataSource: employeesDataSource
                        });
                }
          
            
            // bind json result from /Bonuses/GetPagedJsonBonuses
            var bonusesDataSource = new kendo.data.DataSource({
                transport: {
                    type: "json",
                    read: "@Url.Action("GetPagedJsonBonuses", "Bonuses")",
                    update: { 
                                url: "@Url.Action("Edit", "Bonuses")",
                                type: "PUT"
                            },
                    create: {
                            url: "@Url.Action("Create", "Bonuses")",
                            type: "POST"
                    },
                    parameterMap: function (options, operation) {
                        if (operation === "update" || operation === "create") {
                            var d = new Date(options.Date);
                            // correct format for conversion 
                            options.Date = kendo.toString(d, "MM/dd/yyyy");

                            // updates the BonusDTO.EmployeeId with selected value
                            if(newValueEmployeeId !== undefined)
                                options.EmployeeId = newValueEmployeeId;
                            
                        }
                        return options;
                    }
                },
                pageSize: 3,
                serverPaging: true,
                serverSorting: true,
                schema: {
                    data: "Data", // PagedResponse.Data
                    total : "TotalCount", // PagedResponse.TotalCount
                    model: {id: "BonusId",  // Data
                        fields: {
                            EmployeeId : {type: "number"},
                            EmployeeLastName: {type : "string", 
                                editable: true, 
                                //validation: { required: {message: "Employee's last name is required"}}
                            },
                            Date : {type:"date", editable: true, nullable:false,
                                validation: {
                                    required: {message: "Date is required to be set"}
                                }},
                            Amount: {type: "number", editable: true, nullable:false,
                                validation: {
                                     required: {message: "Amount is required to be set"}
                            }},
                            Comment: {type : "string", editable: true},
                            IsActive : {type: "boolean", editable: true},
                            Ulc : {type : "string", editable: false},
                            Dlc : {type : "date", editable:false}
                            
                        } // fields
                    } // model
                }// schema 
            }); 

            // creates bonuses grid control
            $("#bonusesGrid").kendoGrid({
                dataSource:  bonusesDataSource,
                pageable: true,
                toolbar: ["create"],
                editable: "inline",
                sortable: {
                            mode: "single",
                            allowUnsort: false
                        },
                columns: [
                    {
                        field: "BonusId",
                        hidden: true
                    },
                    {
                        field: "EmployeeId",
                        hidden: true
                    },
                    {   field: "EmployeeLastName",
                        title: "Employee",
                        editor: employeeAutocompletingEditor,
                        template: "#=EmployeeLastName#"
                    },
                    "Amount",
                    {
                        field: "Date",
                        width:  95,
                        template: '#= kendo.toString(Date,"MM/dd/yyyy") #' 
                    },
                    "Comment",
                    {
                        field: "IsActive",
                        width:  70,
                        title: "Active"
                    }, {
                        field: "Ulc",
                        width:  95,
                        title: "ULC"
                    }, {
                        field: "Dlc",
                        title: "DLC",
                        width:  95,
                        template: '#= kendo.toString(Dlc,"MM/dd/yyyy") #' 
                    },
                    { command: ["edit"],
                        width: 105,
                        title: " " }
                ],
                save: function (e) {
                    if (newValueEmployeeId !== undefined && newValueEmployeeLastName !== undefined) {
                        e.model.EmployeeId = newValueEmployeeId; // it's a hack to bind model and autocomplete control
                        e.model.EmployeeLastName = newValueEmployeeLastName;
                    }
                },
                edit: function(e) {
                    setCurrentValueEmployeeIdAndLastName(e.model.EmployeeId, e.model.EmployeeLastName);
                },
                 cancel: function (e) {
                     setCurrentValueEmployeeIdAndLastName(e.model.EmployeeId, e.model.EmployeeLastName);
                }
            });
            
            
        }); // end of ready function
    </script>
</div>
